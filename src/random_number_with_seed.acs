#library "random_number_with_seed"
#include "zcommon.acs"

/**
***************************
Library usage
***************************

#import "random_number_with_seed.acs"

SetSeed(0); // Default is 0, doesn't really need to be set.
RandomNumber(1, 10); // 9

SetSeed(50);
RandomNumber(1, 10)); // 2

SetSeed(0);
RandomNumber(1, 10); // 9

**/

// Constants for pointer start and end positions.
#define SEED_POINTER_START 0
#define SEED_POINTER_END 100

// Random numbers between 1-100.
int seedNumbers[SEED_POINTER_END] = { 85, 17, 46, 37, 98, 65, 32, 21, 18, 39, 34, 57, 35, 13, 68, 7, 4, 15, 64, 40, 31, 91, 54, 47, 50, 73, 67, 99, 76, 44, 88, 79, 83, 90, 74, 26, 23, 49, 70, 52, 12, 97, 80, 59, 100, 42, 3, 1, 87, 61, 6, 10, 51, 93, 41, 77, 84, 82, 60, 48, 14, 96, 29, 45, 36, 16, 89, 92, 38, 30, 81, 94, 63, 95, 2, 8, 58, 20, 24, 78, 86, 62, 43, 71, 5, 19, 69, 27, 28, 25, 66, 56, 72, 11, 9, 33, 53, 75, 55, 22 };

// Pointer.
int seedPointer = 0;

/**
	Get random number. Only supports integer values.
*/
function int RandomNumber(int min, int max) {
	// Idea here is to use the random seed number as a relative random number.
	// Eg. min 1, max 10 with random seed number of 85 will result to 8.5 which is then rounded up to 9.
	// Bit operators for fixed point conversion. Stupid Doom.
	int number = (seedNumbers[seedPointer] << 16) / 100 * (max - min) + (min << 16);
	number = Round(number);
	number = number >> 16;

	// Move pointer one step forward after every random number generation.
	MovePointerOneStep();
	
	return number;
}


/**
	Moves pointer the given amount.
*/
function void MovePointer(int steps) {
	until (steps <= 0) {
		MovePointerOneStep();
		steps--;
	}
}

/**
	Move the pointer one step forward.
*/
function void MovePointerOneStep(void) {
	seedPointer++;
	
	// Loop around.
	if (seedPointer > SEED_POINTER_END) {
		seedPointer = SEED_POINTER_START;
	}
}

/**
	Set given seed. Wrapper for MovePointer().
*/
function void SetSeed(int seed) {
	MovePointer(seed);
}

/**
	Internal test function for development.
*/
function void __TestRandomNumbers(void) {
	SetSeed(50);
	print(d:RandomNumber(1, 10)); // 2
	print(d:RandomNumber(50, 51)); // 50
	print(d:RandomNumber(1, 2)); // 2
	print(d:RandomNumber(1, 2)); // 2
	print(d:RandomNumber(1, 2)); // 1
	print(d:RandomNumber(2000, 6000)); // 5080
}